export interface PageProps {
    fallback: any;
    error?: {
        status: string;
        data: string;
    };
}

export interface User {
    nickname: string;
    email: string;
    avatar: string;
}

// Generated by https://quicktype.io
export interface AxiosGames {
    count: number;
    next: null | string;
    previous: null | string;
    results: Result[];
    user_platforms: boolean;
}

export interface Result {
    slug: string;
    name: string;
    playtime: number;
    platforms: Platform[];
    stores: Store[] | null;
    released: string;
    tba: boolean;
    background_image: string | null;
    rating: number;
    rating_top: number;
    ratings: Rating[];
    ratings_count: number;
    reviews_text_count: number;
    added: number;
    added_by_status: AddedByStatus | null;
    metacritic: number;
    suggestions_count: number;
    updated: string;
    id: number;
    score: null;
    clip: Clip | null;
    tags: Tag[];
    esrb_rating: EsrbRating | null;
    user_game: null;
    reviews_count: number;
    saturated_color: Color;
    dominant_color: Color;
    short_screenshots: ShortScreenshot[];
    parent_platforms: Platform[];
    genres: Genre[];
    community_rating?: number;
}

export interface AddedByStatus {
    yet?: number;
    owned: number;
    beaten?: number;
    toplay: number;
    dropped?: number;
    playing?: number;
}

export interface Clip {
    clip: string;
    clips: { [key: string]: string };
    video: string;
    preview: string;
}

export enum Color {
    The0F0F0F = "0f0f0f",
}

export interface EsrbRating {
    id: number;
    name: Name;
    slug: Slug;
    name_en: Name;
    name_ru: Name;
}

export enum Name {
    Everyone = "Everyone",
    Everyone10 = "Everyone 10+",
    Teen = "Teen",
}

export enum Slug {
    Everyone = "everyone",
    Everyone10Plus = "everyone-10-plus",
    Teen = "teen",
}

export interface Genre {
    id: number;
    name: string;
    slug: string;
}

export interface Platform {
    platform: Genre;
}

export interface Rating {
    id: number;
    title: Title;
    count: number;
    percent: number;
}

export enum Title {
    Exceptional = "exceptional",
    Meh = "meh",
    Recommended = "recommended",
    Skip = "skip",
}

export interface ShortScreenshot {
    id: number;
    image: string;
}

export interface Store {
    store: Genre;
}

export interface Tag {
    id: number;
    name: string;
    slug: string;
    language: Language;
    games_count: number;
    image_background: string;
}

export enum Language {
    Eng = "eng",
    Rus = "rus",
}

// Generated by https://quicktype.io

export interface AxiosGame {
    id: number;
    slug: string;
    name: string;
    name_original: string;
    description: string;
    metacritic: number;
    metacritic_platforms: MetacriticPlatform[];
    released: string;
    tba: boolean;
    updated: string;
    background_image: string;
    background_image_additional: string;
    website: string;
    rating: number;
    rating_top: number;
    ratings: Rating[];
    reactions: { [key: string]: number };
    added: number;
    added_by_status: AddedByStatus;
    playtime: number;
    screenshots_count: number;
    movies_count: number;
    creators_count: number;
    achievements_count: number;
    parent_achievements_count: number;
    reddit_url: string;
    reddit_name: string;
    reddit_description: string;
    reddit_logo: string;
    reddit_count: number;
    twitch_count: number;
    youtube_count: number;
    reviews_text_count: number;
    ratings_count: number;
    suggestions_count: number;
    alternative_names: string[];
    metacritic_url: string;
    parents_count: number;
    additions_count: number;
    game_series_count: number;
    user_game: null;
    reviews_count: number;
    saturated_color: string;
    dominant_color: string;
    parent_platforms: ParentPlatform[];
    platforms: PlatformElement[];
    stores: Store[];
    developers: Developer[];
    genres: Developer[];
    tags: Developer[];
    publishers: Developer[];
    esrb_rating: null;
    clip: Clip;
    description_raw: string;
}

export interface AddedByStatus {
    yet: number;
    owned: number;
    beaten: number;
    toplay: number;
    dropped: number;
    playing: number;
}

export interface Clip {
    clip: string;
    clips: { [key: string]: string };
    video: string;
    preview: string;
}

export interface Developer {
    id: number;
    name: string;
    slug: string;
    games_count: number;
    image_background: string;
    domain?: string;
    language?: Language;
}

export enum Language {
    Eng = "eng",
}

export interface MetacriticPlatform {
    metascore: number;
    url: string;
    platform: MetacriticPlatformPlatform;
}

export interface MetacriticPlatformPlatform {
    platform: number;
    name: string;
    slug: string;
}

export interface ParentPlatform {
    platform: ParentPlatformPlatform;
}

export interface ParentPlatformPlatform {
    id: number;
    name: string;
    slug: string;
}

export interface PlatformElement {
    platform: PlatformPlatform;
    released_at: string;
    requirements: Requirements;
}

export interface PlatformPlatform {
    id: number;
    name: string;
    slug: string;
    image: null;
    year_end: null;
    year_start: number | null;
    games_count: number;
    image_background: string;
}

export interface Requirements {
    minimum?: string;
    recommended?: string;
}

export interface Rating {
    id: number;
    title: string;
    count: number;
    percent: number;
}

export interface Store {
    id: number;
    url: string;
    store: Developer;
}
